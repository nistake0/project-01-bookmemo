# Cursor Development Rules for BookMemo Project

## 開発開始時の必須手順

新しい開発セッションを開始する際は、必ず以下の手順を実行してください：

### 1. 開発開始プロンプトの確認
`doc/development-startup-prompts.md` ファイルを確認し、記載されている3つのプロンプトを順番に実行してください。

### 2. プロンプトの内容
1. **プロジェクト状況確認**: README.md、ARCHITECTURE.md、docのドキュメント群から、プロジェクトの目的、方針、設計、現在の状況の確認
2. **テスト状況確認**: unit test と e2e テストの確認
3. **開発方針議論**: これからの開発方針を議論

## プロジェクト概要
- **目的**: Cursorによる100%自動生成開発の実証
- **技術**: React + Firebase + Material-UI
- **アプリ**: 読書メモ管理Webアプリケーション

## 重要なドキュメント
- `README.md` - プロジェクト概要
- `ARCHITECTURE.md` - 設計・技術詳細
- `doc/` - 開発記録・日報
- `doc/development-startup-prompts.md` - 開発開始時の必須プロンプト

## 開発方針
- 技術的課題と新機能を並行開発
- テスト品質の維持
- ユーザー体験の向上

## セキュリティ重要事項 ⚠️

### 環境変数ファイルの管理
- **絶対にGitにコミットしない**: `.env`、`.env.local`、`.env.development`、`.env.production`、`.env.test`
- **`.gitignore`の確認**: 環境変数ファイルが含まれていることを必ず確認
- **機密情報の漏洩リスク**: APIキー、パスワード、トークン等の漏洩は重大なセキュリティ問題

### セキュリティチェック手順
開発開始時およびコミット前に以下を実行：
```bash
# 環境変数ファイルがGit管理されていないか確認
git ls-files | grep -E "\.env"

# 機密情報が含まれていないか確認
git log --all --full-history -- "*.env"
```

### 環境変数の適切な管理
- **ローカル開発**: `.env.local`（Git管理外）
- **本番環境**: GitHub Secrets
- **チーム共有**: `.env.example`テンプレート
- **テスト環境**: `.env.test`（Git管理外）

### 既にコミットされた機密情報の対処
機密情報がGitにコミットされた場合：
1. 即座に`git rm --cached <file>`で削除
2. `git filter-branch`で履歴から完全削除
3. 強制プッシュでリモートリポジトリも更新
4. 漏洩した機密情報は即座に再発行

## テスト実行時の注意事項
- **E2Eテスト実行前には必ず開発サーバー（`npm run dev`）を起動してください**
- ユニットテストは`npm run test:unit`で実行
- E2Eテストは`npm run test:e2e`で実行（開発サーバー起動後）
- 全テスト実行は`npm run test:all`で実行

---

※このファイルは、開発の継続性を保つために作成されました。 