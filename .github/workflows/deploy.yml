name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run unit tests
      run: npm run test:unit
    
    - name: Prepare env for E2E (optional)
      if: ${{ vars.RUN_E2E == 'true' }}
      run: |
        if [ -n "${{ secrets.VITE_FIREBASE_API_KEY }}" ]; then
          cat > .env.local << EOF
          VITE_FIREBASE_API_KEY=${{ secrets.VITE_FIREBASE_API_KEY }}
          VITE_FIREBASE_AUTH_DOMAIN=${{ secrets.VITE_FIREBASE_AUTH_DOMAIN }}
          VITE_FIREBASE_PROJECT_ID=${{ secrets.VITE_FIREBASE_PROJECT_ID }}
          VITE_FIREBASE_STORAGE_BUCKET=${{ secrets.VITE_FIREBASE_STORAGE_BUCKET }}
          VITE_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.VITE_FIREBASE_MESSAGING_SENDER_ID }}
          VITE_FIREBASE_APP_ID=${{ secrets.VITE_FIREBASE_APP_ID }}
          EOF
        fi
        if [ -n "${{ secrets.SERVICE_ACCOUNT_KEY_JSON }}" ]; then
          echo "${{ secrets.SERVICE_ACCOUNT_KEY_JSON }}" > serviceAccountKey.json
        fi

    - name: Run E2E tests (optional)
      if: ${{ vars.RUN_E2E == 'true' }}
      run: |
        npm run dev &
        sleep 10
        npm run test:e2e

  build-and-deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
      with:
        persist-credentials: false
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Create production env file
      run: |
        echo "=== Debug: Checking all secrets ==="
        echo "VITE_FIREBASE_API_KEY: $([ -n "${{ secrets.VITE_FIREBASE_API_KEY }}" ] && echo "SET (${#VITE_FIREBASE_API_KEY} chars)" || echo "NOT SET")"
        echo "VITE_GOOGLE_BOOKS_API_KEY: $([ -n "${{ secrets.VITE_GOOGLE_BOOKS_API_KEY }}" ] && echo "SET (${#VITE_GOOGLE_BOOKS_API_KEY} chars)" || echo "NOT SET")"
        echo "=== Creating .env.production ==="
        cat > .env.production << EOF
        VITE_FIREBASE_API_KEY=${{ secrets.VITE_FIREBASE_API_KEY }}
        VITE_FIREBASE_AUTH_DOMAIN=${{ secrets.VITE_FIREBASE_AUTH_DOMAIN }}
        VITE_FIREBASE_PROJECT_ID=${{ secrets.VITE_FIREBASE_PROJECT_ID }}
        VITE_FIREBASE_STORAGE_BUCKET=${{ secrets.VITE_FIREBASE_STORAGE_BUCKET }}
        VITE_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.VITE_FIREBASE_MESSAGING_SENDER_ID }}
        VITE_FIREBASE_APP_ID=${{ secrets.VITE_FIREBASE_APP_ID }}
        VITE_GOOGLE_BOOKS_API_KEY=${{ secrets.VITE_GOOGLE_BOOKS_API_KEY }}
        EOF
        echo "=== .env.production file created ==="
        echo "File contents (first 200 chars):"
        head -c 200 .env.production
        echo ""
        echo "VITE_GOOGLE_BOOKS_API_KEY line:"
        grep VITE_GOOGLE_BOOKS_API_KEY .env.production
    
    - name: Build
      run: npm run build
    
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./dist
